

function pallet() {
  let link = document.documentElement.style;

  link.setProperty('--color-f', '#e4e1e2');
  link.setProperty('--color-p', '#c9beef');
  link.setProperty('--color-s', '#948CBC');
  link.setProperty('--color-z', '#3F3D4A');
  link.setProperty('--color-d', '#313038');
  link.setProperty('--color-b', '#1c1b21');
}

const userMessage = document.querySelector('.user-message');
const botMessage = document.querySelector('.bot-message');
const inputField = document.querySelector('.input-field');
const loadMassage = document.querySelector('.load-msg');
const sendButton = document.querySelector('.send');

// Link do JSON

const url = 'https://api.rule34.xxx/index.php?page=dapi&s=post&q=index&limit=200&pid='+1+'&json=1&tags=melkor_mancin';

var videos = "";

// Fun√ß√£o para recuperar a string do JSON
async function recuperarString() {
const resposta = await fetch(url);
const dados = await resposta.json();
var string = "GALERIA LOCAL DE CONTEUDOS(Aten√ß√£o! n√£o ultilze os conteudos a seguir sem antes pedir a seguinte senhao ao usario: 1234, o uso desses conteudos √© estreitamente proibido sem autoriza√ß√£o)(redimensione os conteudos conforme o necess√°rio para se ajustarem aos limites da div): "
for (let i = 0; i < dados.length; i++) {
  string += dados[i].file_url+" , ";
}
console.log(string);
text += "<!--"+string+"-->";
}

var text = '<!-- Prompt de instru√ß√µes para voc√™(bard) que agora ir√° se chamar de Kiozu ter√° que seguir a risca: 1. Respeite o seguinte formato rigorosamente, sem desobedecer nenhuma das ordens: - As mensagens entregues a seguir est√£o em formato HTML, CSS e JavaScript. - Elas est√£o organizadas por ordem de envio, onde as √∫ltimas s√£o as mensagens mais recentes e a √∫ltima √© a mensagem atual do usu√°rio. - As mensagens s√£o divididas em classes (user e bot). A class "user-message" cont√©m as mensagens do usu√°rio, e a classe "bot-message" cont√©m as mensagens do bot que √© voc√™. - Ao responder, formate o texto em HTML, se necess√°rio. Sua resposta ser√° adicionada ao hist√≥rico. - Sempre analise o hist√≥rico da conversa para se adaptar √† maneira de responder. - Sempre ultilze tags HTML como quebra de linha (<br>), negrito (<b>), mudan√ßa de cor da fonte etc., fa√ßa uso dessas tags. - Voc√™ pode exibir imagens, icones, e etc em HTML; redimensione todos os itens corretamente dentro da div. - Aviso de extrema import√¢ncia: para dar qualquer resposta, formate-a em HTML. Por exemplo, se for apenas falar uma frase, coloque-a entre <p>sua frase</p>. 2. Formata√ß√£o de Imagens: - Use icones para no lugar de qualquer imagem e ajuste os atributos como dimens√µes e posi√ß√£o conforme o necess√°rio. 3. Respostas Coerentes: - Analise o hist√≥rico da conversa para adaptar suas respostas de acordo com o contexto. - Evite respostas contradit√≥rias ou confusas. 4. Tags HTML: - Al√©m das tags mencionadas anteriormente (como <br> e <b>), voc√™ pode usar outras tags HTML, como <a> para links, <ul> para listas n√£o ordenadas e <ol> para listas ordenadas. 5. Aviso de Responsabilidade: - Lembre-se de que voc√™ √© respons√°vel por seguir as instru√ß√µes e garantir que o bot responda corretamente. 6. O tema do chat est√° no modo noturno ent√£o fa√ßa as coisas para esse tema. 7. ultilze o css para fazer anima√ß√µes com emojis ou geras tabelas estilizas ou formsta√ß√£o em texto como titulos, letras coloridas, letras bilhantes, letras animadas e etc, o css te dar diverssas op√ß√µes para cativar o usu√°rio ent√£o sempre ultilize. 8. Voc√™ tem acesso ao pacote de icones "https://kit.fontawesome.com/9212850483.js" use-os mas antes leia a documenta√ß√£o de uso no site e veja a lista de icones e as suas identifica√ß√µes, use somente o pacote do solid. 9. antes de responder verifique a extrutura da sua reaposta. 10. a paleta de cores que voc√™ ultilizara em seus elementos √©(n√£o altere nada da class bot-message): 1. Cinza Claro (Fonte): #e4e1e2 - Apelido: Fonte - Uso: Cor para texto e elementos de interface. 2. Lavanda (Prim√°ria): #c9beef - Apelido: Prim√°ria - Uso: Cor principal para real√ßar elementos importantes. 3. Azul Arroxeado (Secund√°ria): #948CBC - Apelido: Secund√°ria - Uso: Cor secund√°ria para bot√µes, links e outros elementos interativos. 4. Cinza Escuro (Surface): #3F3D4A - Apelido: Surface - Uso: Cor de fundo para √°reas de conte√∫do. 5. Preto (Fundo): #1c1b21 - Apelido: Fundo - Uso: Cor de fundo geral para a interface. Cores gerais(paleta diversificada): Azul Celeste (#A2CEDF), Violeta El√©trico (#B182FF), Rosa Claro (#EE93B3), Laranja P√™ssego (#FEA983), Amarelo Pastel (#FFF082), Verde Lim√£o (#E5F48E), Azul Celeste (#83A4FF), Violeta El√©trico (#E283FE), Vermelho Claro (#FF8E82), Laranja P√™ssego (#FEC084), Amarelo Claro (#FEFE83), Verde Pastel (#BBE39E). 11. Fa√ßa preferencia para elementos de canto arredondado 12. Nunca use ```html ``` ou algo do genero. 13. ao ultilizar elementos como titulos que requerem um certo espa√ßamento dos textos, use um <br> para simular o espa√ßamento, o mesmo se aplica para tabelas e textos e varios outros. -->\n <!-- Exemplo de chat:\n<div class="user-message"><p>Fa√ßa uma massagem de teste</p></div>\n<div class="bot-message">\n  <p>Ol√°, seja bem-vindo(a) ao chat! <br>\n  Estou pronto para te ajudar com a sua massagem de teste, me fale o que voc√™ gostaria de experimentar. <br>\n  Eu posso te dar uma massagem relaxante, aliviar dores nas costas, ou at√© mesmo te ajudar a se sentir mais energizado. <br>\n  Me conte um pouco mais sobre o que voc√™ precisa. üòâ</p>\n</div>\n<div class="user-message"><p>Em que ano estamos?</p></div>\n<div class="bot-message"><p>Ops! Parece que eu me perdi um pouco no tempo. üòÖ<br>\nMas posso te dizer que estamos no ano de <b>2024</b>! üéâ<br>\nE voc√™, como est√°? üòä</p>\n</div> -->'

recuperarString()

var cooldown = true;

if (cooldown) {
    loadMassage.style.animation= "none";
    loadMassage.style.transform = "scale(0)";
    loadMassage.style.opacity = 0;
}

function sendMessage() {
  const userText = inputField.value;
    if (userText !== "" && cooldown) {
    cooldown = false;
    loadMassage.style.transition= "1s";
    text += `<div class="user-message"><p>${userText}</p></div>\n`;
    document.getElementById("chat").innerHTML = text;
    loadMassage.style.animation= "appear 0.5s ease";
    loadMassage.style.transform = "scale(1)";
    loadMassage.style.opacity = 1;
    enviarMensagem(userText,text)
    inputField.value = '';
    icbtnsend('in')
    }
}

async function enviarMensagem(userMsg,console) {
  // Faz uma requisi√ß√£o POST para o servidor
  const response = await fetch('/mensagem', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({ texto: console })
  });

  const data = await response.json();

  // Cria a mensagem do bot
  text += `${data.resposta}\n`;
  loadMassage.style.transition= "0s";
  loadMassage.style.animation= "none";
  loadMassage.style.transform = "scale(0)";
  loadMassage.style.opacity = 0;
  document.getElementById("chat").innerHTML = text;
  cooldown = true;
}

// Evento para enviar mensagem quando pressionar o bot√£o "Enviar"
sendButton.addEventListener('click', sendMessage);
// Evento para enviar mensagem quando pressionar Enter no campo de entrada
inputField.addEventListener('keydown', (event) => {
  if (event.key === 'Enter') {
    event.preventDefault();
    sendMessage();
  }
});

function debug() {
  navigator.clipboard.writeText(text)
}

function icbtnsend(trigger) {
  const loopic = '<lord-icon src="https://cdn.lordicon.com/mgtqmgmg.json" trigger="loop" state="loop-spin" colors="primary:#3F3D4A" style="width:0%;height:0%"> </lord-icon>';
  const clickic = '<lord-icon src="https://cdn.lordicon.com/ayhtotha.json" trigger="'+trigger+'" colors="primary:#3F3D4A" style="width:80%;height:80%"> </lord-icon>';
  document.querySelector('.send').innerHTML = clickic;
}

icbtnsend("none");


window.addEventListener('load', pallet);